{"ast":null,"code":"import _createForOfIteratorHelper from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _assertThisInitialized from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _toConsumableArray from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays } from '@fullcalendar/core/internal';\nimport { createElement, Fragment } from '@fullcalendar/core/preact';\nvar ListViewHeaderRow = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(ListViewHeaderRow, _BaseComponent);\n  var _super = _createSuper(ListViewHeaderRow);\n  function ListViewHeaderRow() {\n    var _this;\n    _classCallCheck(this, ListViewHeaderRow);\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      textId: getUniqueDomId()\n    };\n    return _this;\n  }\n  _createClass(ListViewHeaderRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$context = this.context,\n        theme = _this$context.theme,\n        dateEnv = _this$context.dateEnv,\n        options = _this$context.options,\n        viewApi = _this$context.viewApi;\n      var _this$props = this.props,\n        cellId = _this$props.cellId,\n        dayDate = _this$props.dayDate,\n        todayRange = _this$props.todayRange;\n      var textId = this.state.textId;\n      var dayMeta = getDateMeta(dayDate, todayRange);\n      // will ever be falsy?\n      var text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n      // will ever be falsy? also, BAD NAME \"alt\"\n      var sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n      var renderProps = Object.assign({\n        date: dateEnv.toDate(dayDate),\n        view: viewApi,\n        textId: textId,\n        text: text,\n        sideText: sideText,\n        navLinkAttrs: buildNavLinkAttrs(this.context, dayDate),\n        sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false)\n      }, dayMeta);\n      // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n      return createElement(ContentContainer, {\n        elTag: \"tr\",\n        elClasses: ['fc-list-day'].concat(_toConsumableArray(getDayClassNames(dayMeta, theme))),\n        elAttrs: {\n          'data-date': formatDayString(dayDate)\n        },\n        renderProps: renderProps,\n        generatorName: \"dayHeaderContent\",\n        generator: options.dayHeaderContent || renderInnerContent,\n        classNameGenerator: options.dayHeaderClassNames,\n        didMount: options.dayHeaderDidMount,\n        willUnmount: options.dayHeaderWillUnmount\n      }, function (InnerContent) {\n        return (\n          // TODO: force-hide top border based on :first-child\n          createElement(\"th\", {\n            scope: \"colgroup\",\n            colSpan: 3,\n            id: cellId,\n            \"aria-labelledby\": textId\n          }, createElement(InnerContent, {\n            elTag: \"div\",\n            elClasses: ['fc-list-day-cushion', theme.getClass('tableCellShaded')]\n          }))\n        );\n      });\n    }\n  }]);\n  return ListViewHeaderRow;\n}(BaseComponent);\nfunction renderInnerContent(props) {\n  return createElement(Fragment, null, props.text && createElement(\"a\", Object.assign({\n    id: props.textId,\n    className: \"fc-list-day-text\"\n  }, props.navLinkAttrs), props.text), props.sideText && /* not keyboard tabbable */createElement(\"a\", Object.assign({\n    \"aria-hidden\": true,\n    className: \"fc-list-day-side-text\"\n  }, props.sideNavLinkAttrs), props.sideText));\n}\nvar DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: 'short'\n});\nvar ListViewEventRow = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(ListViewEventRow, _BaseComponent2);\n  var _super2 = _createSuper(ListViewEventRow);\n  function ListViewEventRow() {\n    _classCallCheck(this, ListViewEventRow);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(ListViewEventRow, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var seg = props.seg,\n        timeHeaderId = props.timeHeaderId,\n        eventHeaderId = props.eventHeaderId,\n        dateHeaderId = props.dateHeaderId;\n      var timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n      return createElement(EventContainer, Object.assign({}, props, {\n        elTag: \"tr\",\n        elClasses: ['fc-list-event', seg.eventRange.def.url && 'fc-event-forced-url'],\n        defaultGenerator: function defaultGenerator() {\n          return renderEventInnerContent(seg, context);\n        } /* weird */,\n        seg: seg,\n        timeText: \"\",\n        disableDragging: true,\n        disableResizing: true\n      }), function (InnerContent, eventContentArg) {\n        return createElement(Fragment, null, buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId), createElement(\"td\", {\n          \"aria-hidden\": true,\n          className: \"fc-list-event-graphic\"\n        }, createElement(\"span\", {\n          className: \"fc-list-event-dot\",\n          style: {\n            borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor\n          }\n        })), createElement(InnerContent, {\n          elTag: \"td\",\n          elClasses: ['fc-list-event-title'],\n          elAttrs: {\n            headers: \"\".concat(eventHeaderId, \" \").concat(dateHeaderId)\n          }\n        }));\n      });\n    }\n  }]);\n  return ListViewEventRow;\n}(BaseComponent);\nfunction renderEventInnerContent(seg, context) {\n  var interactiveAttrs = getSegAnchorAttrs(seg, context);\n  return createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title);\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n  var options = context.options;\n  if (options.displayEventTime !== false) {\n    var eventDef = seg.eventRange.def;\n    var eventInstance = seg.eventRange.instance;\n    var doAllDay = false;\n    var timeText;\n    if (eventDef.allDay) {\n      doAllDay = true;\n    } else if (isMultiDayRange(seg.eventRange.range)) {\n      // TODO: use (!isStart || !isEnd) instead?\n      if (seg.isStart) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n      } else if (seg.isEnd) {\n        timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n      } else {\n        doAllDay = true;\n      }\n    } else {\n      timeText = buildSegTimeText(seg, timeFormat, context);\n    }\n    if (doAllDay) {\n      var renderProps = {\n        text: context.options.allDayText,\n        view: context.viewApi\n      };\n      return createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-list-event-time'],\n        elAttrs: {\n          headers: \"\".concat(timeHeaderId, \" \").concat(dateHeaderId)\n        },\n        renderProps: renderProps,\n        generatorName: \"allDayContent\",\n        generator: options.allDayContent || renderAllDayInner,\n        classNameGenerator: options.allDayClassNames,\n        didMount: options.allDayDidMount,\n        willUnmount: options.allDayWillUnmount\n      });\n    }\n    return createElement(\"td\", {\n      className: \"fc-list-event-time\"\n    }, timeText);\n  }\n  return null;\n}\nfunction renderAllDayInner(renderProps) {\n  return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nvar ListView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(ListView, _DateComponent);\n  var _super3 = _createSuper(ListView);\n  function ListView() {\n    var _this2;\n    _classCallCheck(this, ListView);\n    _this2 = _super3.apply(this, arguments);\n    _this2.computeDateVars = memoize(computeDateVars);\n    _this2.eventStoreToSegs = memoize(_this2._eventStoreToSegs);\n    _this2.state = {\n      timeHeaderId: getUniqueDomId(),\n      eventHeaderId: getUniqueDomId(),\n      dateHeaderIdRoot: getUniqueDomId()\n    };\n    _this2.setRootEl = function (rootEl) {\n      if (rootEl) {\n        _this2.context.registerInteractiveComponent(_assertThisInitialized(_this2), {\n          el: rootEl\n        });\n      } else {\n        _this2.context.unregisterInteractiveComponent(_assertThisInitialized(_this2));\n      }\n    };\n    return _this2;\n  }\n  _createClass(ListView, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var _this$computeDateVars = this.computeDateVars(props.dateProfile),\n        dayDates = _this$computeDateVars.dayDates,\n        dayRanges = _this$computeDateVars.dayRanges;\n      var eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n      return createElement(ViewContainer, {\n        elRef: this.setRootEl,\n        elClasses: ['fc-list', context.theme.getClass('table'), context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : ''],\n        viewSpec: context.viewSpec\n      }, createElement(Scroller, {\n        liquid: !props.isHeightAuto,\n        overflowX: props.isHeightAuto ? 'visible' : 'hidden',\n        overflowY: props.isHeightAuto ? 'visible' : 'auto'\n      }, eventSegs.length > 0 ? this.renderSegList(eventSegs, dayDates) : this.renderEmptyMessage()));\n    }\n  }, {\n    key: \"renderEmptyMessage\",\n    value: function renderEmptyMessage() {\n      var _this$context2 = this.context,\n        options = _this$context2.options,\n        viewApi = _this$context2.viewApi;\n      var renderProps = {\n        text: options.noEventsText,\n        view: viewApi\n      };\n      return createElement(ContentContainer, {\n        elTag: \"div\",\n        elClasses: ['fc-list-empty'],\n        renderProps: renderProps,\n        generatorName: \"noEventsContent\",\n        generator: options.noEventsContent || renderNoEventsInner,\n        classNameGenerator: options.noEventsClassNames,\n        didMount: options.noEventsDidMount,\n        willUnmount: options.noEventsWillUnmount\n      }, function (InnerContent) {\n        return createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-list-empty-cushion']\n        });\n      });\n    }\n  }, {\n    key: \"renderSegList\",\n    value: function renderSegList(allSegs, dayDates) {\n      var _this$context3 = this.context,\n        theme = _this$context3.theme,\n        options = _this$context3.options;\n      var _this$state = this.state,\n        timeHeaderId = _this$state.timeHeaderId,\n        eventHeaderId = _this$state.eventHeaderId,\n        dateHeaderIdRoot = _this$state.dateHeaderIdRoot;\n      var segsByDay = groupSegsByDay(allSegs); // sparse array\n      return createElement(NowTimer, {\n        unit: \"day\"\n      }, function (nowDate, todayRange) {\n        var innerNodes = [];\n        for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n          var daySegs = segsByDay[dayIndex];\n          if (daySegs) {\n            // sparse array, so might be undefined\n            var dayStr = formatDayString(dayDates[dayIndex]);\n            var dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n            // append a day header\n            innerNodes.push(createElement(ListViewHeaderRow, {\n              key: dayStr,\n              cellId: dateHeaderId,\n              dayDate: dayDates[dayIndex],\n              todayRange: todayRange\n            }));\n            daySegs = sortEventSegs(daySegs, options.eventOrder);\n            var _iterator = _createForOfIteratorHelper(daySegs),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var seg = _step.value;\n                innerNodes.push(createElement(ListViewEventRow, Object.assign({\n                  key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */,\n                  seg: seg,\n                  isDragging: false,\n                  isResizing: false,\n                  isDateSelecting: false,\n                  isSelected: false,\n                  timeHeaderId: timeHeaderId,\n                  eventHeaderId: eventHeaderId,\n                  dateHeaderId: dateHeaderId\n                }, getSegMeta(seg, todayRange, nowDate))));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }\n        return createElement(\"table\", {\n          className: 'fc-list-table ' + theme.getClass('table')\n        }, createElement(\"thead\", null, createElement(\"tr\", null, createElement(\"th\", {\n          scope: \"col\",\n          id: timeHeaderId\n        }, options.timeHint), createElement(\"th\", {\n          scope: \"col\",\n          \"aria-hidden\": true\n        }), createElement(\"th\", {\n          scope: \"col\",\n          id: eventHeaderId\n        }, options.eventHint))), createElement(\"tbody\", null, innerNodes));\n      });\n    }\n  }, {\n    key: \"_eventStoreToSegs\",\n    value: function _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n      return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    }\n  }, {\n    key: \"eventRangesToSegs\",\n    value: function eventRangesToSegs(eventRanges, dayRanges) {\n      var segs = [];\n      var _iterator2 = _createForOfIteratorHelper(eventRanges),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eventRange = _step2.value;\n          segs.push.apply(segs, _toConsumableArray(this.eventRangeToSegs(eventRange, dayRanges)));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return segs;\n    }\n  }, {\n    key: \"eventRangeToSegs\",\n    value: function eventRangeToSegs(eventRange, dayRanges) {\n      var dateEnv = this.context.dateEnv;\n      var nextDayThreshold = this.context.options.nextDayThreshold;\n      var range = eventRange.range;\n      var allDay = eventRange.def.allDay;\n      var dayIndex;\n      var segRange;\n      var seg;\n      var segs = [];\n      for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n        segRange = intersectRanges(range, dayRanges[dayIndex]);\n        if (segRange) {\n          seg = {\n            component: this,\n            eventRange: eventRange,\n            start: segRange.start,\n            end: segRange.end,\n            isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n            isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n            dayIndex: dayIndex\n          };\n          segs.push(seg);\n          // detect when range won't go fully into the next day,\n          // and mutate the latest seg to the be the end.\n          if (!seg.isEnd && !allDay && dayIndex + 1 < dayRanges.length && range.end < dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n            seg.end = range.end;\n            seg.isEnd = true;\n            break;\n          }\n        }\n      }\n      return segs;\n    }\n  }]);\n  return ListView;\n}(DateComponent);\nfunction renderNoEventsInner(renderProps) {\n  return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n  var dayStart = startOfDay(dateProfile.renderRange.start);\n  var viewEnd = dateProfile.renderRange.end;\n  var dayDates = [];\n  var dayRanges = [];\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart);\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1)\n    });\n    dayStart = addDays(dayStart, 1);\n  }\n  return {\n    dayDates: dayDates,\n    dayRanges: dayRanges\n  };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n  var segsByDay = []; // sparse array\n  var i;\n  var seg;\n  for (i = 0; i < segs.length; i += 1) {\n    seg = segs[i];\n    (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg);\n  }\n  return segsByDay;\n}\nexport { ListView };","map":{"version":3,"names":["BaseComponent","getUniqueDomId","getDateMeta","buildNavLinkAttrs","ContentContainer","getDayClassNames","formatDayString","createFormatter","EventContainer","getSegAnchorAttrs","isMultiDayRange","buildSegTimeText","DateComponent","memoize","ViewContainer","Scroller","NowTimer","sortEventSegs","getSegMeta","sliceEventStore","intersectRanges","startOfDay","addDays","createElement","Fragment","ListViewHeaderRow","arguments","state","textId","context","theme","dateEnv","options","viewApi","props","cellId","dayDate","todayRange","dayMeta","text","listDayFormat","format","sideText","listDaySideFormat","renderProps","Object","assign","date","toDate","view","navLinkAttrs","sideNavLinkAttrs","elTag","elClasses","elAttrs","generatorName","generator","dayHeaderContent","renderInnerContent","classNameGenerator","dayHeaderClassNames","didMount","dayHeaderDidMount","willUnmount","dayHeaderWillUnmount","InnerContent","scope","colSpan","id","getClass","className","DEFAULT_TIME_FORMAT","hour","minute","meridiem","ListViewEventRow","seg","timeHeaderId","eventHeaderId","dateHeaderId","timeFormat","eventTimeFormat","eventRange","def","url","defaultGenerator","renderEventInnerContent","timeText","disableDragging","disableResizing","eventContentArg","buildTimeContent","style","borderColor","backgroundColor","headers","interactiveAttrs","title","displayEventTime","eventDef","eventInstance","instance","doAllDay","allDay","range","isStart","start","end","isEnd","allDayText","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","ListView","computeDateVars","eventStoreToSegs","_eventStoreToSegs","dateHeaderIdRoot","setRootEl","rootEl","registerInteractiveComponent","el","unregisterInteractiveComponent","dateProfile","dayDates","dayRanges","eventSegs","eventStore","eventUiBases","elRef","stickyHeaderDates","viewSpec","liquid","isHeightAuto","overflowX","overflowY","length","renderSegList","renderEmptyMessage","noEventsText","noEventsContent","renderNoEventsInner","noEventsClassNames","noEventsDidMount","noEventsWillUnmount","allSegs","segsByDay","groupSegsByDay","unit","nowDate","innerNodes","dayIndex","daySegs","dayStr","push","key","eventOrder","instanceId","isDragging","isResizing","isDateSelecting","isSelected","timeHint","eventHint","eventRangesToSegs","activeRange","nextDayThreshold","fg","eventRanges","segs","eventRangeToSegs","segRange","component","valueOf","add","dayStart","renderRange","viewEnd","i"],"sources":["/workspaces/react/myapp/node_modules/@fullcalendar/list/internal.esm.js"],"sourcesContent":["import { BaseComponent, getUniqueDomId, getDateMeta, buildNavLinkAttrs, ContentContainer, getDayClassNames, formatDayString, createFormatter, EventContainer, getSegAnchorAttrs, isMultiDayRange, buildSegTimeText, DateComponent, memoize, ViewContainer, Scroller, NowTimer, sortEventSegs, getSegMeta, sliceEventStore, intersectRanges, startOfDay, addDays } from '@fullcalendar/core/internal';\nimport { createElement, Fragment } from '@fullcalendar/core/preact';\n\nclass ListViewHeaderRow extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            textId: getUniqueDomId(),\n        };\n    }\n    render() {\n        let { theme, dateEnv, options, viewApi } = this.context;\n        let { cellId, dayDate, todayRange } = this.props;\n        let { textId } = this.state;\n        let dayMeta = getDateMeta(dayDate, todayRange);\n        // will ever be falsy?\n        let text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';\n        // will ever be falsy? also, BAD NAME \"alt\"\n        let sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';\n        let renderProps = Object.assign({ date: dateEnv.toDate(dayDate), view: viewApi, textId,\n            text,\n            sideText, navLinkAttrs: buildNavLinkAttrs(this.context, dayDate), sideNavLinkAttrs: buildNavLinkAttrs(this.context, dayDate, 'day', false) }, dayMeta);\n        // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)\n        return (createElement(ContentContainer, { elTag: \"tr\", elClasses: [\n                'fc-list-day',\n                ...getDayClassNames(dayMeta, theme),\n            ], elAttrs: {\n                'data-date': formatDayString(dayDate),\n            }, renderProps: renderProps, generatorName: \"dayHeaderContent\", generator: options.dayHeaderContent || renderInnerContent, classNameGenerator: options.dayHeaderClassNames, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, (InnerContent) => ( // TODO: force-hide top border based on :first-child\n        createElement(\"th\", { scope: \"colgroup\", colSpan: 3, id: cellId, \"aria-labelledby\": textId },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-list-day-cushion',\n                    theme.getClass('tableCellShaded'),\n                ] })))));\n    }\n}\nfunction renderInnerContent(props) {\n    return (createElement(Fragment, null,\n        props.text && (createElement(\"a\", Object.assign({ id: props.textId, className: \"fc-list-day-text\" }, props.navLinkAttrs), props.text)),\n        props.sideText && ( /* not keyboard tabbable */createElement(\"a\", Object.assign({ \"aria-hidden\": true, className: \"fc-list-day-side-text\" }, props.sideNavLinkAttrs), props.sideText))));\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: 'short',\n});\nclass ListViewEventRow extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg, timeHeaderId, eventHeaderId, dateHeaderId } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TIME_FORMAT;\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"tr\", elClasses: [\n                'fc-list-event',\n                seg.eventRange.def.url && 'fc-event-forced-url',\n            ], defaultGenerator: () => renderEventInnerContent(seg, context) /* weird */, seg: seg, timeText: \"\", disableDragging: true, disableResizing: true }), (InnerContent, eventContentArg) => (createElement(Fragment, null,\n            buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId),\n            createElement(\"td\", { \"aria-hidden\": true, className: \"fc-list-event-graphic\" },\n                createElement(\"span\", { className: \"fc-list-event-dot\", style: {\n                        borderColor: eventContentArg.borderColor || eventContentArg.backgroundColor,\n                    } })),\n            createElement(InnerContent, { elTag: \"td\", elClasses: ['fc-list-event-title'], elAttrs: { headers: `${eventHeaderId} ${dateHeaderId}` } })))));\n    }\n}\nfunction renderEventInnerContent(seg, context) {\n    let interactiveAttrs = getSegAnchorAttrs(seg, context);\n    return (createElement(\"a\", Object.assign({}, interactiveAttrs), seg.eventRange.def.title));\n}\nfunction buildTimeContent(seg, timeFormat, context, timeHeaderId, dateHeaderId) {\n    let { options } = context;\n    if (options.displayEventTime !== false) {\n        let eventDef = seg.eventRange.def;\n        let eventInstance = seg.eventRange.instance;\n        let doAllDay = false;\n        let timeText;\n        if (eventDef.allDay) {\n            doAllDay = true;\n        }\n        else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?\n            if (seg.isStart) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);\n            }\n            else if (seg.isEnd) {\n                timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);\n            }\n            else {\n                doAllDay = true;\n            }\n        }\n        else {\n            timeText = buildSegTimeText(seg, timeFormat, context);\n        }\n        if (doAllDay) {\n            let renderProps = {\n                text: context.options.allDayText,\n                view: context.viewApi,\n            };\n            return (createElement(ContentContainer, { elTag: \"td\", elClasses: ['fc-list-event-time'], elAttrs: {\n                    headers: `${timeHeaderId} ${dateHeaderId}`,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", generator: options.allDayContent || renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }));\n        }\n        return (createElement(\"td\", { className: \"fc-list-event-time\" }, timeText));\n    }\n    return null;\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nclass ListView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.computeDateVars = memoize(computeDateVars);\n        this.eventStoreToSegs = memoize(this._eventStoreToSegs);\n        this.state = {\n            timeHeaderId: getUniqueDomId(),\n            eventHeaderId: getUniqueDomId(),\n            dateHeaderIdRoot: getUniqueDomId(),\n        };\n        this.setRootEl = (rootEl) => {\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { dayDates, dayRanges } = this.computeDateVars(props.dateProfile);\n        let eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);\n        return (createElement(ViewContainer, { elRef: this.setRootEl, elClasses: [\n                'fc-list',\n                context.theme.getClass('table'),\n                context.options.stickyHeaderDates !== false ?\n                    'fc-list-sticky' :\n                    '',\n            ], viewSpec: context.viewSpec },\n            createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?\n                this.renderSegList(eventSegs, dayDates) :\n                this.renderEmptyMessage())));\n    }\n    renderEmptyMessage() {\n        let { options, viewApi } = this.context;\n        let renderProps = {\n            text: options.noEventsText,\n            view: viewApi,\n        };\n        return (createElement(ContentContainer, { elTag: \"div\", elClasses: ['fc-list-empty'], renderProps: renderProps, generatorName: \"noEventsContent\", generator: options.noEventsContent || renderNoEventsInner, classNameGenerator: options.noEventsClassNames, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-list-empty-cushion'] }))));\n    }\n    renderSegList(allSegs, dayDates) {\n        let { theme, options } = this.context;\n        let { timeHeaderId, eventHeaderId, dateHeaderIdRoot } = this.state;\n        let segsByDay = groupSegsByDay(allSegs); // sparse array\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            let innerNodes = [];\n            for (let dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {\n                let daySegs = segsByDay[dayIndex];\n                if (daySegs) { // sparse array, so might be undefined\n                    let dayStr = formatDayString(dayDates[dayIndex]);\n                    let dateHeaderId = dateHeaderIdRoot + '-' + dayStr;\n                    // append a day header\n                    innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, cellId: dateHeaderId, dayDate: dayDates[dayIndex], todayRange: todayRange }));\n                    daySegs = sortEventSegs(daySegs, options.eventOrder);\n                    for (let seg of daySegs) {\n                        innerNodes.push(createElement(ListViewEventRow, Object.assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, timeHeaderId: timeHeaderId, eventHeaderId: eventHeaderId, dateHeaderId: dateHeaderId }, getSegMeta(seg, todayRange, nowDate))));\n                    }\n                }\n            }\n            return (createElement(\"table\", { className: 'fc-list-table ' + theme.getClass('table') },\n                createElement(\"thead\", null,\n                    createElement(\"tr\", null,\n                        createElement(\"th\", { scope: \"col\", id: timeHeaderId }, options.timeHint),\n                        createElement(\"th\", { scope: \"col\", \"aria-hidden\": true }),\n                        createElement(\"th\", { scope: \"col\", id: eventHeaderId }, options.eventHint))),\n                createElement(\"tbody\", null, innerNodes)));\n        }));\n    }\n    _eventStoreToSegs(eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);\n    }\n    eventRangesToSegs(eventRanges, dayRanges) {\n        let segs = [];\n        for (let eventRange of eventRanges) {\n            segs.push(...this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    }\n    eventRangeToSegs(eventRange, dayRanges) {\n        let { dateEnv } = this.context;\n        let { nextDayThreshold } = this.context.options;\n        let range = eventRange.range;\n        let allDay = eventRange.def.allDay;\n        let dayIndex;\n        let segRange;\n        let seg;\n        let segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex,\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    }\n}\nfunction renderNoEventsInner(renderProps) {\n    return renderProps.text;\n}\nfunction computeDateVars(dateProfile) {\n    let dayStart = startOfDay(dateProfile.renderRange.start);\n    let viewEnd = dateProfile.renderRange.end;\n    let dayDates = [];\n    let dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1),\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates, dayRanges };\n}\n// Returns a sparse array of arrays, segs grouped by their dayIndex\nfunction groupSegsByDay(segs) {\n    let segsByDay = []; // sparse array\n    let i;\n    let seg;\n    for (i = 0; i < segs.length; i += 1) {\n        seg = segs[i];\n        (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n            .push(seg);\n    }\n    return segsByDay;\n}\n\nexport { ListView };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}