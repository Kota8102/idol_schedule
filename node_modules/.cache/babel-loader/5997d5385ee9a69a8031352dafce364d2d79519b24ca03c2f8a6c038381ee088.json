{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/molecule/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\nimport \"../../styles/calendar.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [showGroup1, setShowGroup1] = useState(true);\n  const [showGroup2, setShowGroup2] = useState(true);\n  useEffect(() => {\n    // APIからJSONデータを取得\n    const fetchEvents = async () => {\n      const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setEvents(data);\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, listPlugin],\n      initialView: \"dayGridMonth\",\n      locales: [jaLocale],\n      locale: \"ja\",\n      height: \"100vh\",\n      contentHeight: \"auto\",\n      headerToolbar: {\n        left: 'prev today next',\n        center: 'title',\n        right: 'dayGridMonth listYear'\n      }\n      // events={events}\n      ,\n      events: events.filter(event => {\n        if (!showGroup1 && event.groupid === '1') {\n          return false;\n        }\n        if (!showGroup2 && event.groupid === '2') {\n          return false;\n        }\n        return true;\n      })\n      // eventのcssを調整\n      ,\n      eventDidMount: info => {\n        const event = info.event;\n        const element = info.el;\n        element.style.borderColor = 'transparent';\n        element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1');\n\n        // group毎の色を決定\n        if (event.groupId === '1') {\n          element.style.backgroundColor = '#f97316';\n        } else if (event.groupId === '2') {\n          element.style.backgroundColor = '#84cc16';\n        }\n\n        // hober時の動作\n        element.addEventListener('mouseenter', e => {\n          element.style.opacity = '0.6';\n        });\n        element.addEventListener('mouseleave', e => {\n          element.style.opacity = '1';\n        });\n      }\n\n      // eventのクリック時の動作\n      ,\n      eventClick: info => {\n        window.open(info.event.gr, \"_self\");\n        // window.open(info.event.url, \"_blank\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n_s(Calendar, \"kqwRuMR37PMpTn7XYX3vY9HisBE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","jaLocale","listPlugin","Calendar","events","setEvents","showGroup1","setShowGroup1","showGroup2","setShowGroup2","fetchEvents","res","fetch","method","mode","headers","data","json","console","log","left","center","right","filter","event","groupid","info","element","el","style","borderColor","classList","add","groupId","backgroundColor","addEventListener","e","opacity","window","open","gr"],"sources":["/workspaces/react/myapp/src/component/molecule/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\n\nimport \"../../styles/calendar.sass\"\n\nconst Calendar: React.FC = (): JSX.Element => {\n\n    const [events, setEvents] = useState([]);\n\n    const [showGroup1, setShowGroup1] = useState(true);\n    const [showGroup2, setShowGroup2] = useState(true);\n\n    useEffect(() => {\n        // APIからJSONデータを取得\n        const fetchEvents = async () => {\n          const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n            method: 'POST',\n            mode: \"cors\",\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          const data = await res.json();\n          console.log(data);\n          setEvents(data);\n        };\n        fetchEvents();\n      }, []);\n\n    return (\n      <div>\n        <FullCalendar\n            plugins={[dayGridPlugin, listPlugin]}\n            initialView=\"dayGridMonth\"\n            locales={[jaLocale]}\n            locale=\"ja\"\n            height={\"100vh\"}\n            contentHeight={\"auto\"}\n            headerToolbar={\n                { left: 'prev today next', center: 'title', right: 'dayGridMonth listYear'}\n            }\n            // events={events}\n            events={events.filter(event => {\n              if (!showGroup1 && event.groupid === '1') {\n                return false;\n              }\n              if (!showGroup2 && event.groupid === '2') {\n                return false;\n              }\n              return true;\n            })}\n            // eventのcssを調整\n            eventDidMount={(info) => {\n                const event = info.event;\n                const element = info.el;\n\n                element.style.borderColor = 'transparent';\n                element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1',);\n                \n                // group毎の色を決定\n                if (event.groupId === '1') {\n                    element.style.backgroundColor = '#f97316';\n                  } else if (event.groupId === '2') {\n                    element.style.backgroundColor = '#84cc16';\n                }\n                \n                // hober時の動作\n                element.addEventListener('mouseenter', (e) => {\n                    element.style.opacity = '0.6';\n                });\n                element.addEventListener('mouseleave', (e) => {\n                    element.style.opacity = '1';\n                });\n              }}\n              \n            // eventのクリック時の動作\n            eventClick={info => {\n                window.open(info.event.gr, \"_self\");\n                // window.open(info.event.url, \"_blank\");\n              }}\n        />\n      </div>\n    );\n  }\n  \n  export default Calendar;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}