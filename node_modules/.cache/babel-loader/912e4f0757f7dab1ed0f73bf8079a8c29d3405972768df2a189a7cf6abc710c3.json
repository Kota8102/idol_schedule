{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/atom/checkbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport CheckboxContext from '../../contexts/CheckboxContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkbox = _ref => {\n  _s();\n  let {\n    inp_name,\n    isCheck,\n    color\n  } = _ref;\n  const input_check = isCheck === null ? false : isCheck;\n  const [isChecked, setIsChecked] = useState(input_check);\n  const {\n    check,\n    setCheck\n  } = useContext(CheckboxContext);\n  const {\n    name,\n    setName\n  } = useContext(CheckboxContext);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"flex my-1 items-center hover:bg-gray-200 px-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isChecked\n      // onChange={() => setIsChecked(!isChecked)}\n      ,\n      onChange: () => {\n        setIsChecked(!isChecked);\n        setCheck(!isChecked);\n        setName(!isChecked === inp_name);\n        // onChange();\n      },\n\n      className: `${color} w-4 h-4`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"px-2 truncate\",\n      children: inp_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkbox, \"TF2gfC5Lu7hcVMm2z59/io8xRvg=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","useContext","CheckboxContext","Checkbox","inp_name","isCheck","color","input_check","isChecked","setIsChecked","check","setCheck","name","setName"],"sources":["/workspaces/react/myapp/src/component/atom/checkbox.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport CheckboxContext from '../../contexts/CheckboxContext';\n\ntype Props = {\n    inp_name : string\n    isCheck?: boolean\n    color: string\n    // onChange : () => void\n}\n\n\nconst Checkbox: React.FC<Props> = ( {inp_name, isCheck, color }) => {\n\n    const input_check = isCheck === null ? false : isCheck;\n\n    const [isChecked, setIsChecked] = useState(input_check);\n\n    const {check, setCheck} = useContext(CheckboxContext);\n    const {name, setName} = useContext(CheckboxContext);\n\n    return (\n        <label className=\"flex my-1 items-center hover:bg-gray-200 px-2\">\n            <input\n                type=\"checkbox\"\n                checked={isChecked}\n                // onChange={() => setIsChecked(!isChecked)}\n                onChange={() => {\n                    setIsChecked(!isChecked);\n                    setCheck(!isChecked);\n                    setName(!isChecked ===inp_name);\n                    // onChange();\n                  }}\n                className= {`${color} w-4 h-4`}\n            />\n            <p className=\"px-2 truncate\">{inp_name}</p>\n        </label>\n    );\n\n}\n\nexport default Checkbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,eAAe,MAAM,gCAAgC;AAAC;AAU7D,MAAMC,QAAyB,GAAG,QAAkC;EAAA;EAAA,IAAhC;IAACC,QAAQ;IAAEC,OAAO;IAAEC;EAAM,CAAC;EAE3D,MAAMC,WAAW,GAAGF,OAAO,KAAK,IAAI,GAAG,KAAK,GAAGA,OAAO;EAEtD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACO,WAAW,CAAC;EAEvD,MAAM;IAACG,KAAK;IAAEC;EAAQ,CAAC,GAAGV,UAAU,CAACC,eAAe,CAAC;EACrD,MAAM;IAACU,IAAI;IAAEC;EAAO,CAAC,GAAGZ,UAAU,CAACC,eAAe,CAAC;EAEnD,oBACI;IAAO,SAAS,EAAC,+CAA+C;IAAA,wBAC5D;MACI,IAAI,EAAC,UAAU;MACf,OAAO,EAAEM;MACT;MAAA;MACA,QAAQ,EAAE,MAAM;QACZC,YAAY,CAAC,CAACD,SAAS,CAAC;QACxBG,QAAQ,CAAC,CAACH,SAAS,CAAC;QACpBK,OAAO,CAAC,CAACL,SAAS,KAAIJ,QAAQ,CAAC;QAC/B;MACF,CAAE;;MACJ,SAAS,EAAI,GAAEE,KAAM;IAAU;MAAA;MAAA;MAAA;IAAA,QACjC,eACF;MAAG,SAAS,EAAC,eAAe;MAAA,UAAEF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACvC;AAGhB,CAAC;AAAA,GA3BKD,QAAyB;AAAA,KAAzBA,QAAyB;AA6B/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}