{"ast":null,"code":"import _assertThisInitialized from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _toConsumableArray from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/workspaces/react/myapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, Slicer, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nvar TableView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(TableView, _DateComponent);\n  var _super = _createSuper(TableView);\n  function TableView() {\n    var _this;\n    _classCallCheck(this, TableView);\n    _this = _super.apply(this, arguments);\n    _this.headerElRef = createRef();\n    return _this;\n  }\n  _createClass(TableView, [{\n    key: \"renderSimpleLayout\",\n    value: function renderSimpleLayout(headerRowContent, bodyContent) {\n      var props = this.props,\n        context = this.context;\n      var sections = [];\n      var stickyHeaderDates = getStickyHeaderDates(context.options);\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunk: {\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }\n        });\n      }\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunk: {\n          content: bodyContent\n        }\n      });\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [] /* TODO: make optional? */,\n        sections: sections\n      }));\n    }\n  }, {\n    key: \"renderHScrollLayout\",\n    value: function renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n      var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n      if (!ScrollGrid) {\n        throw new Error('No ScrollGrid implementation');\n      }\n      var props = this.props,\n        context = this.context;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n      var sections = [];\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunks: [{\n            key: 'main',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }]\n        });\n      }\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunks: [{\n          key: 'main',\n          content: bodyContent\n        }]\n      });\n      if (stickyFooterScrollbar) {\n        sections.push({\n          type: 'footer',\n          key: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'main',\n            content: renderScrollShim\n          }]\n        });\n      }\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    }\n  }]);\n  return TableView;\n}(DateComponent);\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n  var _iterator = _createForOfIteratorHelper(segs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var seg = _step.value;\n      byRow[seg.row].push(seg);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n  var _iterator2 = _createForOfIteratorHelper(segs),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var seg = _step2.value;\n      byCol[seg.firstCol].push(seg);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var _i = 0; _i < rowCnt; _i += 1) {\n      byRow[_i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n    var _iterator3 = _createForOfIteratorHelper(ui.segs),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var seg = _step3.value;\n        byRow[seg.row].segs.push(seg);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  return byRow;\n}\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol &&\n  // can't be multi-day\n  seg.isStart &&\n  // \"\n  seg.isEnd // \"\n  ;\n}\nvar TableBlockEvent = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(TableBlockEvent, _BaseComponent);\n  var _super2 = _createSuper(TableBlockEvent);\n  function TableBlockEvent() {\n    _classCallCheck(this, TableBlockEvent);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(TableBlockEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(StandardEvent, Object.assign({}, props, {\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n        defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n        defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n        disableResizing: !props.seg.eventRange.def.allDay\n      }));\n    }\n  }]);\n  return TableBlockEvent;\n}(BaseComponent);\nvar TableListItemEvent = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(TableListItemEvent, _BaseComponent2);\n  var _super3 = _createSuper(TableListItemEvent);\n  function TableListItemEvent() {\n    _classCallCheck(this, TableListItemEvent);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(TableListItemEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var seg = props.seg;\n      var timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n      var timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n      return createElement(EventContainer, Object.assign({}, props, {\n        elTag: \"a\",\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'],\n        elAttrs: getSegAnchorAttrs(props.seg, context),\n        defaultGenerator: renderInnerContent,\n        timeText: timeText,\n        isResizing: false,\n        isDateSelecting: false\n      }));\n    }\n  }]);\n  return TableListItemEvent;\n}(BaseComponent);\nfunction renderInnerContent(renderProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: renderProps.borderColor || renderProps.backgroundColor\n    }\n  }), renderProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, renderProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, renderProps.event.title || createElement(Fragment, null, \"\\xA0\")));\n}\nvar TableCellMoreLink = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(TableCellMoreLink, _BaseComponent3);\n  var _super4 = _createSuper(TableCellMoreLink);\n  function TableCellMoreLink() {\n    var _this2;\n    _classCallCheck(this, TableCellMoreLink);\n    _this2 = _super4.apply(this, arguments);\n    _this2.compileSegs = memoize(compileSegs);\n    return _this2;\n  }\n  _createClass(TableCellMoreLink, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var _this$compileSegs = this.compileSegs(props.singlePlacements),\n        allSegs = _this$compileSegs.allSegs,\n        invisibleSegs = _this$compileSegs.invisibleSegs;\n      return createElement(MoreLinkContainer, {\n        elClasses: ['fc-daygrid-more-link'],\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        allDayDate: props.allDayDate,\n        moreCnt: props.moreCnt,\n        allSegs: allSegs,\n        hiddenSegs: invisibleSegs,\n        alignmentElRef: props.alignmentElRef,\n        alignGridTop: props.alignGridTop,\n        extraDateSpan: props.extraDateSpan,\n        popoverContent: function popoverContent() {\n          var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n          return createElement(Fragment, null, allSegs.map(function (seg) {\n            var instanceId = seg.eventRange.instance.instanceId;\n            return createElement(\"div\", {\n              className: \"fc-daygrid-event-harness\",\n              key: instanceId,\n              style: {\n                visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))));\n          }));\n        }\n      });\n    }\n  }]);\n  return TableCellMoreLink;\n}(BaseComponent);\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n  var _iterator4 = _createForOfIteratorHelper(singlePlacements),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var placement = _step4.value;\n      allSegs.push(placement.seg);\n      if (!placement.isVisible) {\n        invisibleSegs.push(placement.seg);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\nvar TableCell = /*#__PURE__*/function (_DateComponent2) {\n  _inherits(TableCell, _DateComponent2);\n  var _super5 = _createSuper(TableCell);\n  function TableCell() {\n    var _this3;\n    _classCallCheck(this, TableCell);\n    _this3 = _super5.apply(this, arguments);\n    _this3.rootElRef = createRef();\n    _this3.state = {\n      dayNumberId: getUniqueDomId()\n    };\n    _this3.handleRootEl = function (el) {\n      setRef(_this3.rootElRef, el);\n      setRef(_this3.props.elRef, el);\n    };\n    return _this3;\n  }\n  _createClass(TableCell, [{\n    key: \"render\",\n    value: function render() {\n      var context = this.context,\n        props = this.props,\n        state = this.state,\n        rootElRef = this.rootElRef;\n      var options = context.options;\n      var date = props.date,\n        dateProfile = props.dateProfile;\n      return createElement(DayCellContainer, {\n        elTag: \"td\",\n        elRef: this.handleRootEl,\n        elClasses: ['fc-daygrid-day'].concat(_toConsumableArray(props.extraClassNames || [])),\n        elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), props.showDayNumber ? {\n          'aria-labelledby': state.dayNumberId\n        } : {}), {\n          role: 'gridcell'\n        }),\n        defaultGenerator: renderTopInner,\n        date: date,\n        dateProfile: dateProfile,\n        todayRange: props.todayRange,\n        showDayNumber: props.showDayNumber,\n        extraRenderProps: props.extraRenderProps\n      }, function (InnerContent, renderProps) {\n        return createElement(\"div\", {\n          className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n          ref: props.innerElRef\n        }, props.showWeekNumber && createElement(WeekNumberContainer, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-week-number'],\n          elAttrs: buildNavLinkAttrs(context, date, 'week'),\n          date: date,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }), Boolean(!renderProps.isDisabled && (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop)) && createElement(\"div\", {\n          className: \"fc-daygrid-day-top\"\n        }, createElement(InnerContent, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-day-number'],\n          elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), {\n            id: state.dayNumberId\n          })\n        })), createElement(\"div\", {\n          className: \"fc-daygrid-day-events\",\n          ref: props.fgContentElRef\n        }, props.fgContent, createElement(\"div\", {\n          className: \"fc-daygrid-day-bottom\",\n          style: {\n            marginTop: props.moreMarginTop\n          }\n        }, createElement(TableCellMoreLink, {\n          allDayDate: date,\n          singlePlacements: props.singlePlacements,\n          moreCnt: props.moreCnt,\n          alignmentElRef: rootElRef,\n          alignGridTop: !props.showDayNumber,\n          extraDateSpan: props.extraDateSpan,\n          dateProfile: props.dateProfile,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          todayRange: props.todayRange\n        }))), createElement(\"div\", {\n          className: \"fc-daygrid-day-bg\"\n        }, props.bgContent));\n      });\n    }\n  }]);\n  return TableCell;\n}(DateComponent);\nfunction renderTopInner(props) {\n  return props.dayNumberText || createElement(Fragment, null, \"\\xA0\");\n}\nfunction computeFgSegPlacement(segs,\n// assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy();\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  }\n  // create segInputs only for segs with known heights\n  var segInputs = [];\n  var unknownHeightSegs = [];\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var instanceId = seg.eventRange.instance.instanceId;\n    var eventHeight = eventInstanceHeights[instanceId];\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n  var _placeRects = placeRects(segRects, segs, cells),\n    singleColPlacements = _placeRects.singleColPlacements,\n    multiColPlacements = _placeRects.multiColPlacements,\n    leftoverMargins = _placeRects.leftoverMargins;\n  var moreCnts = [];\n  var moreMarginTops = [];\n  // add segs with unknown heights\n  for (var _i2 = 0, _unknownHeightSegs = unknownHeightSegs; _i2 < _unknownHeightSegs.length; _i2++) {\n    var _seg = _unknownHeightSegs[_i2];\n    multiColPlacements[_seg.firstCol].push({\n      seg: _seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n    for (var col = _seg.firstCol; col <= _seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(_seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  }\n  // add the hidden entries\n  for (var _col = 0; _col < cells.length; _col += 1) {\n    moreCnts.push(0);\n  }\n  var _iterator5 = _createForOfIteratorHelper(hiddenEntries),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var hiddenEntry = _step5.value;\n      var _seg2 = segs[hiddenEntry.index];\n      var hiddenSpan = hiddenEntry.span;\n      multiColPlacements[hiddenSpan.start].push({\n        seg: resliceSeg(_seg2, hiddenSpan.start, hiddenSpan.end, cells),\n        isVisible: false,\n        isAbsolute: true,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n      for (var _col3 = hiddenSpan.start; _col3 < hiddenSpan.end; _col3 += 1) {\n        moreCnts[_col3] += 1;\n        singleColPlacements[_col3].push({\n          seg: resliceSeg(_seg2, _col3, _col3 + 1, cells),\n          isVisible: false,\n          isAbsolute: false,\n          absoluteTop: 0,\n          marginTop: 0\n        });\n      }\n    }\n    // deal with leftover margins\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  for (var _col2 = 0; _col2 < cells.length; _col2 += 1) {\n    moreMarginTops.push(leftoverMargins[_col2]);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col];\n    // compute all static segs in singlePlacements\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n    var _iterator6 = _createForOfIteratorHelper(rects),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var rect = _step6.value;\n        var seg = segs[rect.index];\n        singlePlacements.push({\n          seg: resliceSeg(seg, col, col + 1, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: rect.levelCoord - currentHeight\n        });\n        currentHeight = rect.levelCoord + rect.thickness;\n      }\n      // compute mixed static/absolute segs in multiPlacements\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n    var _iterator7 = _createForOfIteratorHelper(rects),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _rect = _step7.value;\n        var _seg3 = segs[_rect.index];\n        var isAbsolute = _rect.span.end - _rect.span.start > 1; // multi-column?\n        var isFirstCol = _rect.span.start === col;\n        currentMarginTop += _rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n        currentHeight = _rect.levelCoord + _rect.thickness; // height will now be bottom of current seg\n        if (isAbsolute) {\n          currentMarginTop += _rect.thickness;\n          if (isFirstCol) {\n            multiPlacements.push({\n              seg: resliceSeg(_seg3, _rect.span.start, _rect.span.end, cells),\n              isVisible: true,\n              isAbsolute: true,\n              absoluteTop: _rect.levelCoord,\n              marginTop: 0\n            });\n          }\n        } else if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(_seg3, _rect.span.start, _rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: false,\n            absoluteTop: _rect.levelCoord,\n            marginTop: currentMarginTop // claim the margin\n          });\n\n          currentMarginTop = 0;\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n  var _iterator8 = _createForOfIteratorHelper(rects),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var rect = _step8.value;\n      for (var _col4 = rect.span.start; _col4 < rect.span.end; _col4 += 1) {\n        rectsByEachCol[_col4].push(rect);\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n  return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return Object.assign(Object.assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: Object.assign(Object.assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\nvar DayGridSegHierarchy = /*#__PURE__*/function (_SegHierarchy) {\n  _inherits(DayGridSegHierarchy, _SegHierarchy);\n  var _super6 = _createSuper(DayGridSegHierarchy);\n  function DayGridSegHierarchy() {\n    var _this4;\n    _classCallCheck(this, DayGridSegHierarchy);\n    _this4 = _super6.apply(this, arguments);\n    // config\n    _this4.hiddenConsumes = false;\n    // allows us to keep hidden entries in the hierarchy so they take up space\n    _this4.forceHidden = {};\n    return _this4;\n  }\n  _createClass(DayGridSegHierarchy, [{\n    key: \"addSegs\",\n    value: function addSegs(segInputs) {\n      var _this5 = this;\n      var hiddenSegs = _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"addSegs\", this).call(this, segInputs);\n      var entriesByLevel = this.entriesByLevel;\n      var excludeHidden = function excludeHidden(entry) {\n        return !_this5.forceHidden[buildEntryKey(entry)];\n      };\n      // remove the forced-hidden segs\n      for (var level = 0; level < entriesByLevel.length; level += 1) {\n        entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n      }\n      return hiddenSegs;\n    }\n  }, {\n    key: \"handleInvalidInsertion\",\n    value: function handleInvalidInsertion(insertion, entry, hiddenEntries) {\n      var entriesByLevel = this.entriesByLevel,\n        forceHidden = this.forceHidden;\n      var touchingEntry = insertion.touchingEntry,\n        touchingLevel = insertion.touchingLevel,\n        touchingLateral = insertion.touchingLateral;\n      if (this.hiddenConsumes && touchingEntry) {\n        var touchingEntryId = buildEntryKey(touchingEntry);\n        // if not already hidden\n        if (!forceHidden[touchingEntryId]) {\n          if (this.allowReslicing) {\n            var placeholderEntry = Object.assign(Object.assign({}, touchingEntry), {\n              span: intersectSpans(touchingEntry.span, entry.span)\n            });\n            var placeholderEntryId = buildEntryKey(placeholderEntry);\n            forceHidden[placeholderEntryId] = true;\n            entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n            this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n          } else {\n            forceHidden[touchingEntryId] = true;\n            hiddenEntries.push(touchingEntry);\n          }\n        }\n      }\n      return _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"handleInvalidInsertion\", this).call(this, insertion, entry, hiddenEntries);\n    }\n  }]);\n  return DayGridSegHierarchy;\n}(SegHierarchy);\nvar TableRow = /*#__PURE__*/function (_DateComponent3) {\n  _inherits(TableRow, _DateComponent3);\n  var _super7 = _createSuper(TableRow);\n  function TableRow() {\n    var _this6;\n    _classCallCheck(this, TableRow);\n    _this6 = _super7.apply(this, arguments);\n    _this6.cellElRefs = new RefMap(); // the <td>\n    _this6.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n    _this6.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n    _this6.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n    _this6.rootElRef = createRef();\n    _this6.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      eventInstanceHeights: {}\n    };\n    _this6.handleResize = function (isForced) {\n      if (isForced) {\n        _this6.updateSizing(true); // isExternal=true\n      }\n    };\n    return _this6;\n  }\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      var props = this.props,\n        state = this.state,\n        context = this.context;\n      var options = context.options;\n      var colCnt = props.cells.length;\n      var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n      var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n      var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n      var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n      var _computeFgSegPlacemen = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells),\n        singleColPlacements = _computeFgSegPlacemen.singleColPlacements,\n        multiColPlacements = _computeFgSegPlacemen.multiColPlacements,\n        moreCnts = _computeFgSegPlacemen.moreCnts,\n        moreMarginTops = _computeFgSegPlacemen.moreMarginTops;\n      var isForcedInvisible =\n      // TODO: messy way to compute this\n      props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n      return createElement(\"tr\", {\n        ref: this.rootElRef,\n        role: \"row\"\n      }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n        var normalFgNodes = _this7.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n        var mirrorFgNodes = _this7.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n        return createElement(TableCell, {\n          key: cell.key,\n          elRef: _this7.cellElRefs.createRef(cell.key),\n          innerElRef: _this7.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */,\n          dateProfile: props.dateProfile,\n          date: cell.date,\n          showDayNumber: props.showDayNumbers,\n          showWeekNumber: props.showWeekNumbers && col === 0,\n          forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */,\n          todayRange: props.todayRange,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          extraRenderProps: cell.extraRenderProps,\n          extraDataAttrs: cell.extraDataAttrs,\n          extraClassNames: cell.extraClassNames,\n          extraDateSpan: cell.extraDateSpan,\n          moreCnt: moreCnts[col],\n          moreMarginTop: moreMarginTops[col],\n          singlePlacements: singleColPlacements[col],\n          fgContentElRef: _this7.fgElRefs.createRef(cell.key),\n          fgContent:\n          // Fragment scopes the keys\n          createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n          bgContent:\n          // Fragment scopes the keys\n          createElement(Fragment, null, _this7.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this7.renderFillSegs(businessHoursByCol[col], 'non-business'), _this7.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))\n        });\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSizing(true);\n      this.context.addResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var currentProps = this.props;\n      this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"getHighlightSegs\",\n    value: function getHighlightSegs() {\n      var props = this.props;\n      if (props.eventDrag && props.eventDrag.segs.length) {\n        // messy check\n        return props.eventDrag.segs;\n      }\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n      return props.dateSelectionSegs;\n    }\n  }, {\n    key: \"getMirrorSegs\",\n    value: function getMirrorSegs() {\n      var props = this.props;\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n      return [];\n    }\n  }, {\n    key: \"renderFgSegs\",\n    value: function renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n      var context = this.context;\n      var eventSelection = this.props.eventSelection;\n      var framePositions = this.state.framePositions;\n      var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n      var isMirror = isDragging || isResizing || isDateSelecting;\n      var nodes = [];\n      if (framePositions) {\n        var _iterator9 = _createForOfIteratorHelper(segPlacements),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var placement = _step9.value;\n            var seg = placement.seg;\n            var instanceId = seg.eventRange.instance.instanceId;\n            var key = instanceId + ':' + col;\n            var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n            var isAbsolute = placement.isAbsolute;\n            var left = '';\n            var right = '';\n            if (isAbsolute) {\n              if (context.isRtl) {\n                right = 0;\n                left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n              } else {\n                left = 0;\n                right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n              }\n            }\n            /*\n            known bug: events that are force to be list-item but span multiple days still take up space in later columns\n            todo: in print view, for multi-day events, don't display title within non-start/end segs\n            */\n            nodes.push(createElement(\"div\", {\n              className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n              key: key,\n              ref: isMirror ? null : this.segHarnessRefs.createRef(key),\n              style: {\n                visibility: isVisible ? '' : 'hidden',\n                marginTop: isAbsolute ? '' : placement.marginTop,\n                top: isAbsolute ? placement.absoluteTop : '',\n                left: left,\n                right: right\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isResizing: isResizing,\n              isDateSelecting: isDateSelecting,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange)))));\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n      return nodes;\n    }\n  }, {\n    key: \"renderFillSegs\",\n    value: function renderFillSegs(segs, fillType) {\n      var isRtl = this.context.isRtl;\n      var todayRange = this.props.todayRange;\n      var framePositions = this.state.framePositions;\n      var nodes = [];\n      if (framePositions) {\n        var _iterator10 = _createForOfIteratorHelper(segs),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var seg = _step10.value;\n            var leftRightCss = isRtl ? {\n              right: 0,\n              left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n            } : {\n              left: 0,\n              right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n            };\n            nodes.push(createElement(\"div\", {\n              key: buildEventRangeKey(seg.eventRange),\n              className: \"fc-daygrid-bg-harness\",\n              style: leftRightCss\n            }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n              seg: seg\n            }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n      return createElement.apply(void 0, [Fragment, {}].concat(nodes));\n    }\n  }, {\n    key: \"updateSizing\",\n    value: function updateSizing(isExternalSizingChange) {\n      var props = this.props,\n        state = this.state,\n        frameElRefs = this.frameElRefs;\n      if (!props.forPrint && props.clientWidth !== null // positioning ready?\n      ) {\n        if (isExternalSizingChange) {\n          var frameEls = props.cells.map(function (cell) {\n            return frameElRefs.currentMap[cell.key];\n          });\n          if (frameEls.length) {\n            var originEl = this.rootElRef.current;\n            var newPositionCache = new PositionCache(originEl, frameEls, true,\n            // isHorizontal\n            false);\n            if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n              this.setState({\n                framePositions: new PositionCache(originEl, frameEls, true,\n                // isHorizontal\n                false)\n              });\n            }\n          }\n        }\n        var oldInstanceHeights = this.state.eventInstanceHeights;\n        var newInstanceHeights = this.queryEventInstanceHeights();\n        var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n        this.safeSetState({\n          // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n          // Essentially, once you compute an element's height, never null-out.\n          // TODO: always display all events, as visibility:hidden?\n          eventInstanceHeights: Object.assign(Object.assign({}, oldInstanceHeights), newInstanceHeights),\n          maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n        });\n      }\n    }\n  }, {\n    key: \"queryEventInstanceHeights\",\n    value: function queryEventInstanceHeights() {\n      var segElMap = this.segHarnessRefs.currentMap;\n      var eventInstanceHeights = {};\n      // get the max height amongst instance segs\n      for (var key in segElMap) {\n        var height = Math.round(segElMap[key].getBoundingClientRect().height);\n        var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n        eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n      }\n      return eventInstanceHeights;\n    }\n  }, {\n    key: \"computeMaxContentHeight\",\n    value: function computeMaxContentHeight() {\n      var firstKey = this.props.cells[0].key;\n      var cellEl = this.cellElRefs.currentMap[firstKey];\n      var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n      return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n  }, {\n    key: \"getCellEls\",\n    value: function getCellEls() {\n      var elMap = this.cellElRefs.currentMap;\n      return this.props.cells.map(function (cell) {\n        return elMap[cell.key];\n      });\n    }\n  }]);\n  return TableRow;\n}(DateComponent);\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n  var _iterator11 = _createForOfIteratorHelper(colPlacements),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var placements = _step11.value;\n      var _iterator12 = _createForOfIteratorHelper(placements),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var placement = _step12.value;\n          topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return topsByInstanceId;\n}\nvar Table = /*#__PURE__*/function (_DateComponent4) {\n  _inherits(Table, _DateComponent4);\n  var _super8 = _createSuper(Table);\n  function Table() {\n    var _this8;\n    _classCallCheck(this, Table);\n    _this8 = _super8.apply(this, arguments);\n    _this8.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this8.splitBgEventSegs = memoize(splitSegsByRow);\n    _this8.splitFgEventSegs = memoize(splitSegsByRow);\n    _this8.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this8.splitEventDrag = memoize(splitInteractionByRow);\n    _this8.splitEventResize = memoize(splitInteractionByRow);\n    _this8.rowRefs = new RefMap();\n    _this8.handleRootEl = function (rootEl) {\n      _this8.rootEl = rootEl;\n      if (rootEl) {\n        _this8.context.registerInteractiveComponent(_assertThisInitialized(_this8), {\n          el: rootEl,\n          isHitComboAllowed: _this8.props.isHitComboAllowed\n        });\n      } else {\n        _this8.context.unregisterInteractiveComponent(_assertThisInitialized(_this8));\n      }\n    };\n    return _this8;\n  }\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      var props = this.props;\n      var dateProfile = props.dateProfile,\n        dayMaxEventRows = props.dayMaxEventRows,\n        dayMaxEvents = props.dayMaxEvents,\n        expandRows = props.expandRows;\n      var rowCnt = props.cells.length;\n      var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n      var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n      var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n      var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n      var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n      var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n      var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n      // if rows can't expand to fill fixed height, can't do balanced-height event limit\n      // TODO: best place to normalize these options?\n      if (limitViaBalanced && !expandRows) {\n        limitViaBalanced = false;\n        dayMaxEventRows = null;\n        dayMaxEvents = null;\n      }\n      var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n      ];\n\n      return createElement(\"div\", {\n        className: classNames.join(' '),\n        ref: this.handleRootEl,\n        style: {\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(NowTimer, {\n        unit: \"day\"\n      }, function (nowDate, todayRange) {\n        return createElement(Fragment, null, createElement(\"table\", {\n          role: \"presentation\",\n          className: \"fc-scrollgrid-sync-table\",\n          style: {\n            width: props.clientWidth,\n            minWidth: props.tableMinWidth,\n            height: expandRows ? props.clientHeight : ''\n          }\n        }, props.colGroupNode, createElement(\"tbody\", {\n          role: \"presentation\"\n        }, props.cells.map(function (cells, row) {\n          return createElement(TableRow, {\n            ref: _this9.rowRefs.createRef(row),\n            key: cells.length ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */ : row // in case there are no cells (like when resource view is loading)\n            ,\n            showDayNumbers: rowCnt > 1,\n            showWeekNumbers: props.showWeekNumbers,\n            todayRange: todayRange,\n            dateProfile: dateProfile,\n            cells: cells,\n            renderIntro: props.renderRowIntro,\n            businessHourSegs: businessHourSegsByRow[row],\n            eventSelection: props.eventSelection,\n            bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */,\n            fgEventSegs: fgEventSegsByRow[row],\n            dateSelectionSegs: dateSelectionSegsByRow[row],\n            eventDrag: eventDragByRow[row],\n            eventResize: eventResizeByRow[row],\n            dayMaxEvents: dayMaxEvents,\n            dayMaxEventRows: dayMaxEventRows,\n            clientWidth: props.clientWidth,\n            clientHeight: props.clientHeight,\n            forPrint: props.forPrint\n          });\n        }))));\n      }));\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n  }, {\n    key: \"prepareHits\",\n    value: function prepareHits() {\n      this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n        return rowObj.getCellEls()[0];\n      }),\n      // first cell el in each row. TODO: not optimal\n      false, true);\n      this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(),\n      // cell els in first row\n      true,\n      // horizontal\n      false);\n    }\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var colPositions = this.colPositions,\n        rowPositions = this.rowPositions;\n      var col = colPositions.leftToIndex(positionLeft);\n      var row = rowPositions.topToIndex(positionTop);\n      if (row != null && col != null) {\n        var cell = this.props.cells[row][col];\n        return {\n          dateProfile: this.props.dateProfile,\n          dateSpan: Object.assign({\n            range: this.getCellRange(row, col),\n            allDay: true\n          }, cell.extraDateSpan),\n          dayEl: this.getCellEl(row, col),\n          rect: {\n            left: colPositions.lefts[col],\n            right: colPositions.rights[col],\n            top: rowPositions.tops[row],\n            bottom: rowPositions.bottoms[row]\n          },\n          layer: 0\n        };\n      }\n      return null;\n    }\n  }, {\n    key: \"getCellEl\",\n    value: function getCellEl(row, col) {\n      return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n  }, {\n    key: \"getCellRange\",\n    value: function getCellRange(row, col) {\n      var start = this.props.cells[row][col].date;\n      var end = addDays(start, 1);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }]);\n  return Table;\n}(DateComponent);\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\nvar DayTableSlicer = /*#__PURE__*/function (_Slicer) {\n  _inherits(DayTableSlicer, _Slicer);\n  var _super9 = _createSuper(DayTableSlicer);\n  function DayTableSlicer() {\n    var _this10;\n    _classCallCheck(this, DayTableSlicer);\n    _this10 = _super9.apply(this, arguments);\n    _this10.forceDayIfListItem = true;\n    return _this10;\n  }\n  _createClass(DayTableSlicer, [{\n    key: \"sliceRange\",\n    value: function sliceRange(dateRange, dayTableModel) {\n      return dayTableModel.sliceRange(dateRange);\n    }\n  }]);\n  return DayTableSlicer;\n}(Slicer);\nvar DayTable = /*#__PURE__*/function (_DateComponent5) {\n  _inherits(DayTable, _DateComponent5);\n  var _super10 = _createSuper(DayTable);\n  function DayTable() {\n    var _this11;\n    _classCallCheck(this, DayTable);\n    _this11 = _super10.apply(this, arguments);\n    _this11.slicer = new DayTableSlicer();\n    _this11.tableRef = createRef();\n    return _this11;\n  }\n  _createClass(DayTable, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      return createElement(Table, Object.assign({\n        ref: this.tableRef\n      }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n        dateProfile: props.dateProfile,\n        cells: props.dayTableModel.cells,\n        colGroupNode: props.colGroupNode,\n        tableMinWidth: props.tableMinWidth,\n        renderRowIntro: props.renderRowIntro,\n        dayMaxEvents: props.dayMaxEvents,\n        dayMaxEventRows: props.dayMaxEventRows,\n        showWeekNumbers: props.showWeekNumbers,\n        expandRows: props.expandRows,\n        headerAlignElRef: props.headerAlignElRef,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        forPrint: props.forPrint\n      }));\n    }\n  }]);\n  return DayTable;\n}(DateComponent);\nvar DayTableView = /*#__PURE__*/function (_TableView) {\n  _inherits(DayTableView, _TableView);\n  var _super11 = _createSuper(DayTableView);\n  function DayTableView() {\n    var _this12;\n    _classCallCheck(this, DayTableView);\n    _this12 = _super11.apply(this, arguments);\n    _this12.buildDayTableModel = memoize(buildDayTableModel);\n    _this12.headerRef = createRef();\n    _this12.tableRef = createRef();\n    return _this12;\n  }\n  _createClass(DayTableView, [{\n    key: \"render\",\n    value: function render() {\n      var _this13 = this;\n      var _this$context = this.context,\n        options = _this$context.options,\n        dateProfileGenerator = _this$context.dateProfileGenerator;\n      var props = this.props;\n      var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n      var headerContent = options.dayHeaders && createElement(DayHeader, {\n        ref: this.headerRef,\n        dateProfile: props.dateProfile,\n        dates: dayTableModel.headerDates,\n        datesRepDistinctDays: dayTableModel.rowCnt === 1\n      });\n      var bodyContent = function bodyContent(contentArg) {\n        return createElement(DayTable, {\n          ref: _this13.tableRef,\n          dateProfile: props.dateProfile,\n          dayTableModel: dayTableModel,\n          businessHours: props.businessHours,\n          dateSelection: props.dateSelection,\n          eventStore: props.eventStore,\n          eventUiBases: props.eventUiBases,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          nextDayThreshold: options.nextDayThreshold,\n          colGroupNode: contentArg.tableColGroupNode,\n          tableMinWidth: contentArg.tableMinWidth,\n          dayMaxEvents: options.dayMaxEvents,\n          dayMaxEventRows: options.dayMaxEventRows,\n          showWeekNumbers: options.weekNumbers,\n          expandRows: !props.isHeightAuto,\n          headerAlignElRef: _this13.headerElRef,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          forPrint: props.forPrint\n        });\n      };\n      return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n  }]);\n  return DayTableView;\n}(TableView);\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };","map":{"version":3,"names":["DateComponent","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","renderScrollShim","createFormatter","BaseComponent","StandardEvent","buildSegTimeText","EventContainer","getSegAnchorAttrs","memoize","MoreLinkContainer","getSegMeta","getUniqueDomId","setRef","DayCellContainer","WeekNumberContainer","buildNavLinkAttrs","hasCustomDayCellContent","intersectRanges","addDays","SegHierarchy","buildEntryKey","intersectSpans","RefMap","sortEventSegs","isPropsEqual","buildEventRangeKey","BgEvent","renderFill","PositionCache","NowTimer","Slicer","DayHeader","DaySeriesModel","DayTableModel","createRef","createElement","Fragment","TableView","arguments","headerElRef","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","tableClassName","rowContent","liquid","content","elClasses","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","chunks","colGroups","span","minWidth","splitSegsByRow","segs","rowCnt","byRow","i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","DEFAULT_TABLE_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","Object","assign","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","elTag","elAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","compileSegs","singlePlacements","allSegs","invisibleSegs","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","rootElRef","state","dayNumberId","handleRootEl","el","date","extraClassNames","extraDataAttrs","showDayNumber","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","showWeekNumber","defaultFormat","Boolean","isDisabled","forceDayTop","id","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","eventInstanceHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","index","thickness","start","end","hiddenEntries","addSegs","segRects","toRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","multiPlacements","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","durationEditable","valueOf","forceHidden","entriesByLevel","excludeHidden","entry","level","filter","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","placeholderEntry","placeholderEntryId","splitEntry","TableRow","cellElRefs","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","addResizeHandler","prevProps","prevState","currentProps","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","top","fillType","leftRightCss","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","similarTo","setState","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","split","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","Table","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","rootEl","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","expandRows","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","limitViaBalanced","classNames","join","width","tableMinWidth","unit","nowDate","clientHeight","colGroupNode","toISOString","renderRowIntro","isSegAllDay","rowPositions","collect","rowObj","getCellEls","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","DayTableSlicer","forceDayIfListItem","dateRange","dayTableModel","sliceRange","DayTable","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","DayTableView","buildDayTableModel","headerRef","dateProfileGenerator","headerContent","dayHeaders","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","renderRange","test","currentRangeUnit","DayGridView"],"sources":["/workspaces/react/myapp/node_modules/@fullcalendar/daygrid/internal.esm.js"],"sourcesContent":["import { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, Slicer, DayHeader, DaySeriesModel, DayTableModel } from '@fullcalendar/core/internal';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options } = context;\n        let { date, dateProfile } = props;\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", ref: props.innerElRef },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            Boolean(!renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop)) && (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: ['fc-daygrid-day-number'], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy();\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let { instanceId } = seg.eventRange.instance;\n        let eventHeight = eventInstanceHeights[instanceId];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                thickness: eventHeight,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            // if not already hidden\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    const placeholderEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    const placeholderEntryId = buildEntryKey(placeholderEntry);\n                    forceHidden[placeholderEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n                    this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        return super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            eventInstanceHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))) }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let key = instanceId + ':' + col;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: key, ref: isMirror ? null : this.segHarnessRefs.createRef(key), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldInstanceHeights = this.state.eventInstanceHeights;\n            const newInstanceHeights = this.queryEventInstanceHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                eventInstanceHeights: Object.assign(Object.assign({}, oldInstanceHeights), newInstanceHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    queryEventInstanceHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let eventInstanceHeights = {};\n        // get the max height amongst instance segs\n        for (let key in segElMap) {\n            let height = Math.round(segElMap[key].getBoundingClientRect().height);\n            let instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n            eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n        }\n        return eventInstanceHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    eventInstanceHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n        this.handleRootEl = (rootEl) => {\n            this.rootEl = rootEl;\n            if (rootEl) {\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n    }\n    render() {\n        let { props } = this;\n        let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { className: classNames.join(' '), ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null,\n                createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                        width: props.clientWidth,\n                        minWidth: props.tableMinWidth,\n                        height: expandRows ? props.clientHeight : '',\n                    } },\n                    props.colGroupNode,\n                    createElement(\"tbody\", { role: \"presentation\" }, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                            ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                            : row // in case there are no cells (like when resource view is loading)\n                        , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint }))))))))));\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}