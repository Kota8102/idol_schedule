{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/molecule/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\nimport CheckboxContext from '../../contexts/CheckboxContext';\nimport \"../../styles/calendar.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {\n    checkList,\n    setCheckList,\n    groupidList,\n    setGroupidList\n  } = useContext(CheckboxContext);\n  useEffect(() => {\n    // APIからJSONデータを取得\n    const fetchEvents = async () => {\n      const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      setEvents(data);\n    };\n    fetchEvents();\n  }, []);\n  const filterevents = events.filter(info => {\n    return groupidList.includes(info.groupId);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, listPlugin],\n      initialView: \"dayGridMonth\",\n      locales: [jaLocale],\n      locale: \"ja\",\n      height: \"100vh\",\n      contentHeight: \"auto\",\n      headerToolbar: {\n        left: 'prev today next',\n        center: 'title',\n        right: 'dayGridMonth listYear'\n      },\n      events: filterevents\n\n      // eventのcssを調整\n      ,\n      eventDidMount: info => {\n        const event = info.event;\n        const element = info.el;\n        element.style.borderColor = 'transparent';\n        element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1');\n\n        // group毎の色を決定\n        if (event.groupId === '1') {\n          element.style.backgroundColor = '#a855f7';\n        } else if (event.groupId === '2') {\n          element.style.backgroundColor = '#059669';\n        } else if (event.groupId === '2') {\n          element.style.backgroundColor = '#059669';\n        }\n\n        // hober時の動作\n        element.addEventListener('mouseenter', () => {\n          element.style.opacity = '0.6';\n        });\n        element.addEventListener('mouseleave', () => {\n          element.style.opacity = '1';\n        });\n      }\n\n      // eventのクリック時の動作\n      ,\n      eventClick: info => {\n        window.open(info.event.url, \"_self\");\n        // window.open(info.event.url, \"_blank\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(Calendar, \"w6H7Gw1EU9QlSfI/EIVVO6IIcqA=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","useContext","FullCalendar","dayGridPlugin","jaLocale","listPlugin","CheckboxContext","Calendar","events","setEvents","checkList","setCheckList","groupidList","setGroupidList","fetchEvents","res","fetch","method","mode","headers","data","json","filterevents","filter","info","includes","groupId","left","center","right","event","element","el","style","borderColor","classList","add","backgroundColor","addEventListener","opacity","window","open","url"],"sources":["/workspaces/react/myapp/src/component/molecule/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\n\nimport CheckboxContext from '../../contexts/CheckboxContext';\n\nimport \"../../styles/calendar.sass\"\n\n\nconst Calendar: React.FC = (): JSX.Element => {\n\n    const [events, setEvents] = useState([]);\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { checkList, setCheckList, groupidList, setGroupidList } = useContext(CheckboxContext);\n\n    useEffect(() => {\n        // APIからJSONデータを取得\n        const fetchEvents = async () => {\n          const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n            method: 'POST',\n            mode: \"cors\",\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          const data = await res.json();\n\n          setEvents(data);\n        };\n        fetchEvents();\n      }, []);\n\n      const filterevents = events.filter((info: { groupId: string; }) => {\n        return groupidList.includes(info.groupId);\n      });\n\n      \n      \n    return (\n      <div>\n        <FullCalendar\n            plugins={[dayGridPlugin, listPlugin]}\n            initialView=\"dayGridMonth\"\n            locales={[jaLocale]}\n            locale=\"ja\"\n            height={\"100vh\"}\n            contentHeight={\"auto\"}\n            headerToolbar={\n                { left: 'prev today next', center: 'title', right: 'dayGridMonth listYear'}\n            }\n            events={filterevents}\n\n            // eventのcssを調整\n            eventDidMount={(info) => {\n                const event = info.event;\n                const element = info.el;\n\n                element.style.borderColor = 'transparent';\n                element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1',);\n                \n                // group毎の色を決定\n                if (event.groupId === '1') {\n                    element.style.backgroundColor = '#a855f7';\n                  } else if (event.groupId === '2') {\n                    element.style.backgroundColor = '#059669';\n                } else if (event.groupId === '2') {\n                  element.style.backgroundColor = '#059669';\n                }\n                \n                // hober時の動作\n                element.addEventListener('mouseenter', () => {\n                    element.style.opacity = '0.6';\n                });\n                element.addEventListener('mouseleave', () => {\n                    element.style.opacity = '1';\n                });\n              }}\n              \n            // eventのクリック時の動作\n            eventClick={info => {\n                window.open(info.event.url, \"_self\");\n                // window.open(info.event.url, \"_blank\");\n              }}\n        />\n\n      </div>\n    );\n  }\n  \n  export default Calendar;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}