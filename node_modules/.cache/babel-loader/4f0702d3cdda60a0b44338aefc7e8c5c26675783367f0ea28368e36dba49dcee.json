{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/atom/calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // APIからJSONデータを取得\n    const fetchEvents = async () => {\n      const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n        method: 'POST',\n        mode: \"cors\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      setEvents(data);\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, listPlugin],\n      initialView: \"dayGridMonth\",\n      locales: [jaLocale],\n      locale: \"ja\",\n      height: \"100vh\",\n      headerToolbar: {\n        left: 'prev today next',\n        center: 'title',\n        right: 'dayGridMonth list'\n      },\n      events: events,\n      eventDidMount: info => {\n        const element = info.el;\n        element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1');\n      },\n      eventClick: info => {\n        window.open(info.event.url, \"_blank\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(Calendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","jaLocale","listPlugin","Calendar","events","setEvents","fetchEvents","res","fetch","method","mode","headers","data","json","console","log","left","center","right","info","element","el","classList","add","window","open","event","url"],"sources":["/workspaces/react/myapp/src/component/atom/calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport jaLocale from '@fullcalendar/core/locales/ja';\nimport listPlugin from '@fullcalendar/list';\n\nconst Calendar: React.FC = (): JSX.Element => {\n\n    const [events, setEvents] = useState([]);\n    useEffect(() => {\n        // APIからJSONデータを取得\n        const fetchEvents = async () => {\n          const res = await fetch('https://jbwg9oogwc.execute-api.ap-northeast-1.amazonaws.com/json', {\n            method: 'POST',\n            mode: \"cors\",\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          const data = await res.json();\n          console.log(data);\n          setEvents(data);\n        };\n        fetchEvents();\n      }, []);\n\n    return (\n      <div>\n        <FullCalendar\n            plugins={[dayGridPlugin, listPlugin]}\n            initialView=\"dayGridMonth\"\n            locales={[jaLocale]}\n            locale=\"ja\"\n            height={\"100vh\"}\n            headerToolbar={\n                { left: 'prev today next', center: 'title', right: 'dayGridMonth list'}\n            }\n            events={events}\n            eventDidMount={(info) => {\n                const element = info.el;\n                element.classList.add('text-xs', 'leading-5', 'tracking-wide', 'pl-1',);\n              }}\n\n            eventClick={info => {\n                window.open(info.event.url, \"_blank\");\n              }}\n        />\n      </div>\n    );\n  }\n  \n  export default Calendar;\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,UAAU,MAAM,oBAAoB;AAAC;AAE5C,MAAMC,QAAkB,GAAG,MAAmB;EAAA;EAE1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,WAAW,GAAG,YAAY;MAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kEAAkE,EAAE;QAC1FC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBP,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC;IACDN,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAER,oBACE;IAAA,uBACE,QAAC,YAAY;MACT,OAAO,EAAE,CAACN,aAAa,EAAEE,UAAU,CAAE;MACrC,WAAW,EAAC,cAAc;MAC1B,OAAO,EAAE,CAACD,QAAQ,CAAE;MACpB,MAAM,EAAC,IAAI;MACX,MAAM,EAAE,OAAQ;MAChB,aAAa,EACT;QAAEe,IAAI,EAAE,iBAAiB;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAmB,CACzE;MACD,MAAM,EAAEd,MAAO;MACf,aAAa,EAAGe,IAAI,IAAK;QACrB,MAAMC,OAAO,GAAGD,IAAI,CAACE,EAAE;QACvBD,OAAO,CAACE,SAAS,CAACC,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,CAAE;MACzE,CAAE;MAEJ,UAAU,EAAEJ,IAAI,IAAI;QAChBK,MAAM,CAACC,IAAI,CAACN,IAAI,CAACO,KAAK,CAACC,GAAG,EAAE,QAAQ,CAAC;MACvC;IAAE;MAAA;MAAA;MAAA;IAAA;EACN;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAA,GA3CGxB,QAAkB;AAAA,KAAlBA,QAAkB;AA6CtB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}