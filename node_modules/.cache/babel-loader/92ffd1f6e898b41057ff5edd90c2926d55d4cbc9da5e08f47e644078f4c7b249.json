{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/atom/checkbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Checkbox() {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: isChecked,\n      onChange: () => setIsChecked(!isChecked)\n      // className={`bg-${color}-500`}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"yosugala\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Checkbox, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n_c = Checkbox;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","Checkbox","isChecked","setIsChecked"],"sources":["/workspaces/react/myapp/src/component/atom/checkbox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n\n\n\nfunction Checkbox() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={() => setIsChecked(!isChecked)}\n        // className={`bg-${color}-500`}\n      />\n      <p>yosugala</p>\n    </label>\n  );\n}\n\nexport default Checkbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAKxC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,UAAU;MACf,OAAO,EAAEE,SAAU;MACnB,QAAQ,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAS;MACvC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACF;MAAA,UAAG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEZ;AAAC,GAdQD,QAAQ;AAAA,KAARA,QAAQ;AAgBjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}