{"ast":null,"code":"var _jsxFileName = \"/workspaces/react/myapp/src/component/layout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport CheckboxContext from '../contexts/CheckboxContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Layout = _ref => {\n  _s();\n  let {\n    children,\n    isIdolslist\n  } = _ref;\n  // const [check, setCheck] = useState(false);\n  // const [name, setName] = useState('');\n\n  // const [checkList, setCheckList] = useState<boolean[]>([]);\n  const [groupidList, setGroupidList] = useState([\"1\", \"2\", \"3\"]);\n  const [checkList, setCheckList] = useState(new Array(3).fill(true));\n  return (\n    /*#__PURE__*/\n    // <CheckboxContext.Provider value={{check, setCheck, name, setName}}>\n    _jsxDEV(CheckboxContext.Provider, {\n      value: {\n        checkList,\n        setCheckList,\n        groupidList,\n        setGroupidList\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:flex md:flex-col h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"md:flex-grow py-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"md:flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"md:hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"isIdolslist\",\n                children: isIdolslist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"md:flex-auto md:p-4\",\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  );\n};\n_s(Layout, \"+VQyGAKxZ1furIfrUnuBqB3Ke9I=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","Header","Footer","CheckboxContext","Layout","children","isIdolslist","groupidList","setGroupidList","checkList","setCheckList","Array","fill"],"sources":["/workspaces/react/myapp/src/component/layout.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react'\n\nimport Header from './header'\nimport Footer from './footer'\nimport Sidebar from './sidebar'\n\nimport CheckboxContext from '../contexts/CheckboxContext'\n\ntype Props = {\n  children: ReactNode;\n  isIdolslist?: boolean;\n}\n\nconst Layout = ({ children, isIdolslist }: Props) => {\n\n  // const [check, setCheck] = useState(false);\n  // const [name, setName] = useState('');\n\n  // const [checkList, setCheckList] = useState<boolean[]>([]);\n  const [groupidList,setGroupidList]=useState<string[]>([\"1\",\"2\",\"3\"]);\n  const [checkList, setCheckList] = useState<boolean[]>(new Array(3).fill(true));\n\n    return (\n      // <CheckboxContext.Provider value={{check, setCheck, name, setName}}>\n      <CheckboxContext.Provider value={{ checkList, setCheckList, groupidList, setGroupidList }}>\n\n<div className=\"md:flex md:flex-col h-screen\">\n  <Header />\n  <main className=\"md:flex-grow py-5\">\n    <div className=\"md:flex\">\n      <div className=\"md:hidden\">\n        <div className=\"isIdolslist\">\n          {isIdolslist}\n        </div>\n      </div>\n      <div className=\"md:flex-auto md:p-4\">\n         {children}\n      </div>\n    </div>\n  </main>\n  <Footer/>\n</div>\n\n        {/* <div className=\"flex flex-col h-screen\">\n          <Header />\n          <main className=\"flex-grow py-5 md:p-6\">\n            <div className=\"flex\">\n              <div className=\"basis-1/12 p-4 hidden md:inline-block\">\n                <Sidebar isIdolslist={isIdolslist}/>\n              </div>\n              <div className=\"flex-auto md:p-4\">\n                 {children}\n              </div>\n            </div>\n          </main>\n          <Footer/>\n        </div> */}\n      </CheckboxContext.Provider>\n     \n    )\n  }\n\n  export default Layout\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAG7B,OAAOC,eAAe,MAAM,6BAA6B;AAAA;AAOzD,MAAMC,MAAM,GAAG,QAAsC;EAAA;EAAA,IAArC;IAAEC,QAAQ;IAAEC;EAAmB,CAAC;EAE9C;EACA;;EAEA;EACA,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACR,QAAQ,CAAW,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;EACpE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAY,IAAIW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE5E;IAAA;IACE;IACA,QAAC,eAAe,CAAC,QAAQ;MAAC,KAAK,EAAE;QAAEH,SAAS;QAAEC,YAAY;QAAEH,WAAW;QAAEC;MAAe,CAAE;MAAA,uBAEhG;QAAK,SAAS,EAAC,8BAA8B;QAAA,wBAC3C,QAAC,MAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACV;UAAM,SAAS,EAAC,mBAAmB;UAAA,uBACjC;YAAK,SAAS,EAAC,SAAS;YAAA,wBACtB;cAAK,SAAS,EAAC,WAAW;cAAA,uBACxB;gBAAK,SAAS,EAAC,aAAa;gBAAA,UACzBF;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YACR;cAAA;cAAA;cAAA;YAAA,QACF,eACN;cAAK,SAAS,EAAC,qBAAqB;cAAA,UAChCD;YAAQ;cAAA;cAAA;cAAA;YAAA,QACN;UAAA;YAAA;YAAA;YAAA;UAAA;QACF;UAAA;UAAA;UAAA;QAAA,QACD,eACP,QAAC,MAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA;EAgB2B;AAG/B,CAAC;AAAA,GA/CGD,MAAM;AAAA,KAANA,MAAM;AAiDV,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}